{"version":3,"sources":["Actions/Index.js","firebaseConfig.js","Components/Login.js","Components/MemberLogin.js","Components/AdminLogin.js","Components/Admin.js","Components/Member.js","Components/Account.js","Components/MainPage.js","App.js","reportWebVitals.js","Reducers/adminReducers.js","Reducers/LoginReducer.js","Reducers/Index.js","Store.js","index.js"],"names":["deleteCurrent","id","type","payload","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Login","dispatch","useDispatch","useState","LoginMob","setLoginMob","LoginPass","setLoginPass","history","useHistory","className","htmlFor","aria-describedby","value","onChange","e","target","onClick","length","push","collection","get","then","querySnapshot","forEach","doc","fname","address","mob","password","admin","data","Mobile","Password","Name","Address","Admin","alert","MemberLogin","aria-current","to","AdminLogin","input","setInput","setAddress","setMob","pass","setPass","setAdmin","verify","setverify","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","placeholder","style","color","recaptcha","auth","RecaptchaVerifier","phoneNumber","signInWithPhoneNumber","confirmationResult","code","window","prompt","confirm","result","console","log","catch","error","rows","add","currlist","useSelector","state","LoginReducer","currList","memList","setmemList","useEffect","onSnapshot","docs","map","class","src","alt","delete","Member","Account","curr","React","show","setShow","setTimeout","AD","undefined","MainPage","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initial","list","adminReducers","action","newList","filter","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.318603d3.chunk.js","sourcesContent":["export const addMember=(fname,address,mob,password,admin=\"No\")=>{\r\n    return{\r\n        type:\"ADD\",\r\n        payload:{\r\n            fname: fname,\r\n            address:address,\r\n            mob:mob,\r\n            password:password,\r\n            admin:admin\r\n        }\r\n    }\r\n}\r\nexport const deleteMember=(id)=>{\r\n    return{\r\n        type:\"DELETE\",\r\n        payload:{\r\n            id:id\r\n        }\r\n    }\r\n}\r\nexport const clearMember=()=>{\r\n    return{\r\n        type:\"CLEAR\"\r\n    }\r\n}\r\nexport const addCurrent=(id,fname,address,mob,password,admin)=>{\r\n    return{\r\n        type:\"Current\",\r\n        payload:{\r\n            id:id,\r\n            fname: fname,\r\n            address:address,\r\n            mob:mob,\r\n            password:password,\r\n            admin:admin\r\n        }\r\n    }\r\n}\r\nexport const deleteCurrent=(id)=>{\r\n    return{\r\n        type:\"DeleteCurrent\",\r\n        payload:{\r\n            id:id\r\n        }\r\n    }\r\n}","import firebase from 'firebase';\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC-dmdcPlb-_wrXEyOyh5B6uy9zWlN9p50\",\r\n    authDomain: \"member-mngmnt.firebaseapp.com\",\r\n    projectId: \"member-mngmnt\",\r\n    storageBucket: \"member-mngmnt.appspot.com\",\r\n    messagingSenderId: \"135312056089\",\r\n    appId: \"1:135312056089:web:5007428b61f5119f09ef88\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db=firebase.firestore();\r\n\r\nexport {db,firebase};\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {addCurrent} from '../Actions/Index'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {db} from '../firebaseConfig';\r\n\r\nimport '../index.css'\r\nconst Login = () => {\r\n    //const list = useSelector((state)=>state.adminReducers.list);\r\n    const dispatch = useDispatch();\r\n    const [LoginMob, setLoginMob] = useState('');\r\n    const [LoginPass, setLoginPass] = useState(\"\");\r\n    const history = useHistory();\r\n    const click=()=>{\r\n        if(LoginMob.length===10){\r\n            let path = `/Account`; \r\n            history.push(path);\r\n            db.collection(\"members\").get()\r\n            .then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n            \r\n            //console.log(doc.id, \" => \", doc.data().Mobile);\r\n            if(doc.data().Mobile === LoginMob && doc.data().Password ===LoginPass)\r\n                {dispatch(addCurrent(doc.data().id,doc.data().Name,doc.data().Address,doc.data().Mobile,doc.data().Password,doc.data().Admin));}\r\n            //else\r\n               // alert(\"Incorrect Mobile no. or Password\");\r\n            //console.log(doc.data());\r\n        });\r\n      });\r\n    }\r\n    else\r\n        alert(\"Invalid Mobile Number\");\r\n     //const temp=list.find((curr)=>curr.mob===LoginMob);\r\n    /* if(temp!==undefined && temp.Password===LoginPass){\r\n        dispatch(addCurrent(temp.id,temp.fname,temp.address,temp.mob,temp.password,temp.admin));\r\n     }\r\n     else\r\n        alert(\"Incorrect Mobile no. or Password\")*/\r\n    }\r\n   \r\n\r\n    return (\r\n        <div>\r\n            \r\n         <form >\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"mob1\" className=\"form-label\">Mobile no.</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"mob1\" aria-describedby=\"mobHelp\" value={LoginMob} onChange={(e)=>setLoginMob(e.target.value)}></input>\r\n                <div id=\"mobHelp\" className=\"form-text\">We'll never share your contacts with anyone else.</div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"pass1\" className=\"form-label\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"pass1\" value={LoginPass} onChange={(e)=>setLoginPass(e.target.value)}></input>\r\n            </div>\r\n            \r\n            <button onClick={click} className=\"btn btn-primary\">Log In</button>\r\n         </form>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport '../index.css'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Login from './Login';\r\n\r\nconst MemberLogin = () => {\r\n    return (\r\n        <>\r\n        <div className='memberLogin container-fluid'>\r\n            <div className='loginForm'>\r\n                <ul className=\"nav nav-pills nav-fill\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" id=\"navMember\" aria-current=\"page\" to=\"/MemberLogin\">LogIn</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" id=\"navAdmin\" to=\"/SignUp\">SignUp</Link>\r\n                        </li>\r\n                        </ul>\r\n                        <Login/>    \r\n             </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MemberLogin","import React from 'react'\r\nimport {\r\n    Link, useHistory\r\n} from \"react-router-dom\";\r\nimport '../index.css'\r\nimport {useState} from 'react'\r\n//import {useDispatch,useSelector} from 'react-redux'\r\n//import {deleteCurrent} from '../Actions/Index'\r\n\r\nimport '../index.css'\r\nimport {db,firebase} from '../firebaseConfig';\r\n//import firebase from '../firebase';\r\n\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [input,setInput] = useState(\"\");\r\n    const [address,setAddress] = useState(\"\");\r\n    const [mob,setMob] = useState(\"\");\r\n    const [pass,setPass] = useState(\"\");\r\n    const [admin,setAdmin] = useState(false);\r\n    const [verify,setverify]= useState('false');\r\n    const history=useHistory();\r\n    \r\n\r\n    /*var setupRecapcha =()=>{\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\r\n            'size': 'invisible',\r\n            'callback': (response) => {\r\n              // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n              onSignInSubmit();\r\n            }\r\n          });\r\n    }*/\r\n\r\n    const onSignInSubmit=()=>{\r\n        let recaptcha= new firebase.auth.RecaptchaVerifier('sign-in-button')\r\n        const phoneNumber = '+91'+mob;\r\n       // const appVerifier = window.recaptchaVerifier;\r\n        firebase.auth().signInWithPhoneNumber(phoneNumber, recaptcha)\r\n        .then((confirmationResult) => {\r\n                let code = window.prompt(\"Enter otp\");\r\n                confirmationResult.confirm(code).then((result) => {\r\n                // User signed in successfully.\r\n                \r\n                setverify('true');\r\n                console.log(\"User verified\");\r\n                // ...\r\n                }).catch((error) => {\r\n                // User couldn't sign in (bad verification code?)\r\n                // ...\r\n                });\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        // ...\r\n    }).catch((error) => {\r\n      // Error; SMS not sent\r\n      // ...\r\n    });\r\n    }\r\n\r\n    //const currlist = useSelector((state)=>state.LoginReducer.currList);\r\n    \r\n    \r\n    //const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n        <div className='memberLogin container-fluid'>\r\n            <div className='loginForm'>\r\n                <ul className=\"nav nav-pills nav-fill\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" id=\"navMember\" aria-current=\"page\" to=\"/MemberLogin\">LogIn</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" id=\"navAdmin\" to=\"/SignUp\">SignUp</Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"add_item\">\r\n                            \r\n                    <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                            REGISTER NEW MEMBER\r\n                        </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                        <div className=\"accordion-body\">\r\n                        <div className='register'>\r\n                  \r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i2\" className=\"form-label\">Full Name</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i2\" placeholder=\"xyz\" value={input} onChange={(e)=>setInput(e.target.value)}/>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i1\" className=\"form-label\">Mobile number</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i1\" placeholder=\"99*******98\" value={mob} onChange={(e)=>setMob(e.target.value)}/>\r\n                  {\r\n                      (mob.length!==10)?<div style={{color:\"red\"}}>Mobile number must be of 10 digits</div>:<></>\r\n                  }\r\n                  <button className='btn btn-primary btn-sm' type='button' onClick={onSignInSubmit}>verify</button>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i3\" className=\"form-label\">Password</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i3\" placeholder=\"*******\" value={pass} onChange={(e)=>setPass(e.target.value)}/>\r\n                  {\r\n                      (pass.length<6)?<div style={{color:\"yellow\"}}>weak</div>:<div style={{color:\"green\"}}>Good</div>\r\n                  }\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i4\" className=\"form-label\">Address</label>\r\n                  <textarea className=\"form-control\" id=\"i4\" rows=\"3\" value={address} onChange={(e)=>setAddress(e.target.value)}></textarea>\r\n                  </div>\r\n                  <div className=\"d-grid gap-2\">\r\n                  <input className=\"btn btn-primary\" id='add' type=\"button\" value=\"ADD\" onClick={()=>{\r\n                    //dispatch(addMember(input,address,mob,pass,admin),setInput(\"\"),setAddress(\"\"),setMob(\"\"),setPass(\"\"),setAdmin(\"\"))\r\n                    if(verify==='true'){\r\n                    db.collection(\"members\").add({Name:input,Address:address,Mobile:mob,Password:pass,Admin:admin});\r\n                    setInput(\"\");\r\n                    setAddress(\"\");\r\n                    setMob(\"\");\r\n                    setPass(\"\");\r\n                    setAdmin(\"\");\r\n                    history.push('/MemberLogin');\r\n                    }else\r\n                        alert(\"Please verify your number\")\r\n                    }}></input>\r\n                  </div>\r\n            </div>\r\n            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n             </div>\r\n                \r\n             </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminLogin\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {deleteCurrent} from '../Actions/Index'\r\nimport {useHistory} from 'react-router-dom'\r\nimport '../index.css'\r\nimport {db} from '../firebaseConfig';\r\nimport {useEffect} from 'react'\r\n\r\nconst Admin = () => {\r\n\r\n    \r\n    //const list = useSelector((state)=>state.adminReducers.list);\r\n    const currlist = useSelector((state)=>state.LoginReducer.currList);\r\n    const [input,setInput] = useState(\"\");\r\n    const [address,setAddress] = useState(\"\");\r\n    const [mob,setMob] = useState(\"\");\r\n    const [pass,setPass] = useState(\"\");\r\n    const [admin,setAdmin] = useState(false);\r\n    const [memList,setmemList] = useState([]);\r\n    const history =useHistory();\r\n    useEffect(() => {\r\n        getData(); \r\n    }, [])\r\n   \r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function getData(){db.collection(\"members\").onSnapshot(\r\n        function (querySnapshot) {\r\n            setmemList(\r\n            querySnapshot.docs.map((doc)=>({\r\n                id:doc.id,\r\n                Name:doc.data().Name,\r\n                Mobile:doc.data().Mobile,\r\n                Admin:doc.data().Admin,\r\n                Password:doc.data().Password,\r\n                Address:doc.data().Address\r\n            })\r\n                \r\n            ))\r\n        }\r\n    )}\r\n    \r\n\r\n    return (\r\n        <div className=\"addMembers container-fluid\">\r\n            \r\n            \r\n             <div className=\"add_item\">\r\n                            <div class=\"d-grid gap-2\">\r\n                                <button className='btn btn-primary' onClick={()=>{dispatch(deleteCurrent(currlist[0].id));history.push('/MemberLogin');}}>Log Out</button>\r\n                            </div>\r\n                    <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                            REGISTER NEW MEMBER\r\n                        </button>\r\n                        </h2>\r\n                        <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                        <div className=\"accordion-body\">\r\n                        <div className='register'>\r\n                  \r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i2\" className=\"form-label\">Full Name</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i2\" placeholder=\"xyz\" value={input} onChange={(e)=>setInput(e.target.value)}/>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i1\" className=\"form-label\">Mobile number</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i1\" placeholder=\"99*******98\" value={mob} onChange={(e)=>setMob(e.target.value)}/>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i3\" className=\"form-label\">Password</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"i3\" placeholder=\"*******\" value={pass} onChange={(e)=>setPass(e.target.value)}/>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                  <label htmlFor=\"i4\" className=\"form-label\">Address</label>\r\n                  <textarea className=\"form-control\" id=\"i4\" rows=\"3\" value={address} onChange={(e)=>setAddress(e.target.value)}></textarea>\r\n                  </div>\r\n                  <div className=\"d-grid gap-2\">\r\n                  <input className=\"btn btn-primary\" type=\"button\" value=\"ADD\" onClick={()=>{\r\n                    //dispatch(addMember(input,address,mob,pass,admin),setInput(\"\"),setAddress(\"\"),setMob(\"\"),setPass(\"\"),setAdmin(\"\"))\r\n                    db.collection(\"members\").add({Name:input,Address:address,Mobile:mob,Password:pass,Admin:admin});\r\n                    setInput(\"\");\r\n                    setAddress(\"\");\r\n                    setMob(\"\");\r\n                    setPass(\"\");\r\n                    setAdmin(\"\");\r\n                    }}></input>\r\n                  </div>\r\n            </div>\r\n            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n             </div>\r\n             <div className='registeredMember'>\r\n                    <div className='memberData'>\r\n                            \r\n\r\n                                        \r\n                            {\r\n                                //dispatch(addMember(doc.data().Name,doc.data().Address,doc.data().Mobile,doc.data().Password,doc.data().Admin));\r\n                            memList.map((data) => {\r\n                                return (<div className='card dataCard' key={data.id} ><img src=\"https://source.unsplash.com/random\" className=\"card-img-top\" alt=\"img\"/>\r\n                                    <div className=\"listData card-body\"><h5 className=\"card-title\">{data.Name}</h5><p className=\"card-text\">Mobile : {data.Mobile}</p><p className=\"card-text\">Password : {data.Password}</p><p className=\"card-text\">Admin : {(data.Admin)?\"Yes\":'No'}</p><p className=\"card-text\">Address : {data.Address}</p></div><button type='button' className=\"btn btn-danger btn-sm\" onClick={()=>db.collection('members').doc(data.id).delete()}>Delete</button></div>\r\n                        )})}\r\n                    </div>\r\n             </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react'\r\nimport '../index.css'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {deleteCurrent} from '../Actions/Index';\r\nconst Member = () => {\r\n    const data = useSelector(state => state.LoginReducer.currList[0]);\r\n    const dispatch=useDispatch();\r\n    const history=useHistory();\r\n    return (\r\n        <div className='memberCard'>\r\n              <div className=\"card detailCard\" >\r\n                <img src=\"https://source.unsplash.com/random\" className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{data.fname}</h5>\r\n                    <p className=\"card-text\">Lives in {data.address}. Can contact on {data.mob}</p>\r\n                    <button className='btn btn-success' onClick={()=>{dispatch(deleteCurrent(data.id));history.push('/MemberLogin');}}>Log Out</button>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport Admin from './Admin'\r\nimport Member from './Member'\r\nimport '../index.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {useEffect} from 'react';\r\n\r\n\r\nconst Account = () => {\r\n    \r\n    const curr = useSelector((state)=>state.LoginReducer.currList);\r\n    const [show, setShow] = React.useState(false);\r\n      \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setShow(true)\r\n      }, 5000)\r\n    }, [show])\r\n    \r\n    \r\n   \r\n    const AD=()=>{\r\n        if (!show) return <div id='Loader'> </div>\r\n\r\n        else if(curr[0]!==undefined){\r\n                \r\n                if(curr[0].admin===true){\r\n                    return <Admin/>\r\n                }\r\n                else{\r\n                    return <Member/>\r\n                }\r\n            }\r\n        else if(curr[0]===undefined) {\r\n\r\n                return <div className='errorPage'>\r\n                    <div className=\"d-grid gap-2\">\r\n                                <button className='btn btn-primary' ><Link id=\"logOut\" to=\"/MemberLogin\">LOGIN PAGE</Link></button>\r\n                    </div>\r\n                    <h3>404</h3> \r\n                    <p>Page not found</p>\r\n                    <p>Enter the correct Mobile or Password</p>\r\n                </div>\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AD/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React from 'react';\r\nimport MemberLogin from './MemberLogin';\r\nimport '../index.css'\r\nimport {\r\n    Switch,\r\n\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport AdminLogin from './AdminLogin';\r\nimport Account from './Account';\r\n\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Switch>\r\n                <Route exact path=\"/memberManagement/\">\r\n                    <MemberLogin/>\r\n                </Route>\r\n                <Route exact path=\"/MemberLogin\">\r\n                    <MemberLogin/>\r\n                </Route>\r\n                <Route exact path=\"/SignUp\">\r\n                    <AdminLogin/>\r\n                </Route>\r\n                <Route exact path=\"/Account\">\r\n                    <Account/>\r\n                </Route>\r\n                \r\n            </Switch>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","\nimport './index.css';\nimport MainPage from './Components/MainPage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <MainPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial= {\r\n    list :[{id:\"1234567890\",fname:\"Mahendra Singh Dhoni\",mob:\"1234567890\",password:\"ms!dhoni123\",admin:\"yes\",address:\"Harmu Housing Colony, Ranchi, Jharkhand, India\"},{id:\"0987654321\",fname:\"Mahtab Alam\",mob:\"7209291966\",password:\"ms@mahi123\",admin:\"no\",address:\"Dhori Staff Quarter, Phusro, Bokaro, Jharkhand, India\"}]\r\n}\r\n\r\n\r\nconst adminReducers=(state=initial,action)=>{\r\n    switch(action.type){\r\n        case \"ADD\":\r\n            //const{id,data}=action.payload;\r\n\r\n            return{\r\n                ...state,\r\n                list:[...state.list,\r\n                    action.payload\r\n                ]\r\n            \r\n            \r\n            }\r\n            case \"DELETE\":\r\n                const{id}=action.payload;\r\n                const newList=state.list.filter((e)=>e.id!==id)\r\n    \r\n                return{\r\n                    ...state,\r\n                    list:newList\r\n                    \r\n                }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default adminReducers;","const initial= {\r\n    currList :[]\r\n}\r\n\r\n\r\nconst LoginReducer=(state=initial,action)=>{\r\n    switch(action.type){\r\n        case \"Current\":\r\n            //const{id,data}=action.payload;\r\n            return{\r\n                ...state,\r\n                currList:[...state.currList,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case \"DeleteCurrent\":\r\n                const{id}=action.payload;\r\n                const newList=state.currList.filter((e)=>e.id!==id)\r\n    \r\n                return{\r\n                    ...state,\r\n                    currList:newList\r\n                }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default LoginReducer;\r\n","import adminReducers from './adminReducers';\r\nimport LoginReducer from './LoginReducer'\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    adminReducers,\r\n    LoginReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport  rootReducer from './Reducers/Index';\r\n\r\nconst store=createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Store'\nimport {Provider} from 'react-redux'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}